<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0321.1733                               -->
<workbook original-version='18.1' source-build='2019.1.2 (20191.19.0321.1733)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='KimD_ImmigrantStatus' inline='true' name='federated.19pj3mk0ugjp2m19rh4rr15brwtx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='KimD_ImmigrantStatus' name='textscan.025123t1jkbw7y1arjuex1e6ji6l'>
            <connection class='textscan' directory='C:/immigration' filename='KimD_ImmigrantStatus.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.025123t1jkbw7y1arjuex1e6ji6l' name='KimD_ImmigrantStatus.csv' table='[KimD_ImmigrantStatus#csv]' type='table'>
          <columns character-set='windows-1252' header='no' locale='en_US' separator=','>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='string' name='F2' ordinal='1' />
            <column datatype='string' name='F3' ordinal='2' />
            <column datatype='string' name='F4' ordinal='3' />
            <column datatype='string' name='F5' ordinal='4' />
            <column datatype='string' name='F6' ordinal='5' />
            <column datatype='string' name='F7' ordinal='6' />
            <column datatype='string' name='F8' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[KimD_ImmigrantStatus.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;ibm-5348_P100-1997&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[KimD_ImmigrantStatus.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[KimD_ImmigrantStatus.csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[KimD_ImmigrantStatus.csv]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[KimD_ImmigrantStatus.csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[KimD_ImmigrantStatus.csv]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[KimD_ImmigrantStatus.csv]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F7]</local-name>
            <parent-name>[KimD_ImmigrantStatus.csv]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F8</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F8]</local-name>
            <parent-name>[KimD_ImmigrantStatus.csv]</parent-name>
            <remote-alias>F8</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.632948' measure-ordering='alphabetic' measure-percentage='0.367052' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='KD_US_AsylumSeekingApp' inline='true' name='federated.1pcvjxg1uj9vcy13kjy0709hsg3x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='KD_US_AsylumSeekingApp' name='textscan.0tv03mt1fsmfr412jmnfo0mybxne'>
            <connection class='textscan' directory='C:/immigration' filename='KD_US_AsylumSeekingApp.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0tv03mt1fsmfr412jmnfo0mybxne' name='KD_US_AsylumSeekingApp.csv' table='[KD_US_AsylumSeekingApp#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='real' name='Latitude' ordinal='1' />
            <column datatype='real' name='Longitude' ordinal='2' />
            <column datatype='string' name='Region' ordinal='3' />
            <column datatype='integer' name='Year' ordinal='4' />
            <column datatype='string' name='Country_Territory_Of_Asylum_Residence' ordinal='5' />
            <column datatype='string' name='RSD_Procedure_Type_Level' ordinal='6' />
            <column datatype='integer' name='Total_Persons_Pending_Start_Year' ordinal='7' />
            <column datatype='integer' name='Applied_During_Year' ordinal='8' />
            <column datatype='integer' name='Statistics_Filter_Decisions_Recognized' ordinal='9' />
            <column datatype='integer' name='Rejected' ordinal='10' />
            <column datatype='integer' name='Otherwise_Closed' ordinal='11' />
            <column datatype='integer' name='Total_Decisions' ordinal='12' />
            <column datatype='integer' name='Total_Persons_Pending_End_Year' ordinal='13' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[KD_US_AsylumSeekingApp.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[KD_US_AsylumSeekingApp.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[KD_US_AsylumSeekingApp.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[KD_US_AsylumSeekingApp.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[KD_US_AsylumSeekingApp.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[KD_US_AsylumSeekingApp.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Territory_Of_Asylum_Residence</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_Territory_Of_Asylum_Residence]</local-name>
            <parent-name>[KD_US_AsylumSeekingApp.csv]</parent-name>
            <remote-alias>Country_Territory_Of_Asylum_Residence</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RSD_Procedure_Type_Level</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RSD_Procedure_Type_Level]</local-name>
            <parent-name>[KD_US_AsylumSeekingApp.csv]</parent-name>
            <remote-alias>RSD_Procedure_Type_Level</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Persons_Pending_Start_Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Persons_Pending_Start_Year]</local-name>
            <parent-name>[KD_US_AsylumSeekingApp.csv]</parent-name>
            <remote-alias>Total_Persons_Pending_Start_Year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Applied_During_Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Applied_During_Year]</local-name>
            <parent-name>[KD_US_AsylumSeekingApp.csv]</parent-name>
            <remote-alias>Applied_During_Year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Statistics_Filter_Decisions_Recognized</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Statistics_Filter_Decisions_Recognized]</local-name>
            <parent-name>[KD_US_AsylumSeekingApp.csv]</parent-name>
            <remote-alias>Statistics_Filter_Decisions_Recognized</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rejected</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rejected]</local-name>
            <parent-name>[KD_US_AsylumSeekingApp.csv]</parent-name>
            <remote-alias>Rejected</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Otherwise_Closed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Otherwise_Closed]</local-name>
            <parent-name>[KD_US_AsylumSeekingApp.csv]</parent-name>
            <remote-alias>Otherwise_Closed</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Decisions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Decisions]</local-name>
            <parent-name>[KD_US_AsylumSeekingApp.csv]</parent-name>
            <remote-alias>Total_Decisions</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Persons_Pending_End_Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Persons_Pending_End_Year]</local-name>
            <parent-name>[KD_US_AsylumSeekingApp.csv]</parent-name>
            <remote-alias>Total_Persons_Pending_End_Year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Applied During Year' datatype='integer' name='[Applied_During_Year]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Territory Of Asylum Residence' datatype='string' name='[Country_Territory_Of_Asylum_Residence]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Otherwise Closed' datatype='integer' name='[Otherwise_Closed]' role='measure' type='quantitative' />
      <column caption='RSD Procedure Type Level' datatype='string' name='[RSD_Procedure_Type_Level]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Rejected]' role='measure' type='quantitative' />
      <column caption='Statistics Filter Decisions Recognized' datatype='integer' name='[Statistics_Filter_Decisions_Recognized]' role='measure' type='quantitative' />
      <column caption='Total Decisions' datatype='integer' name='[Total_Decisions]' role='measure' type='quantitative' />
      <column caption='Total Persons Pending End Year' datatype='integer' name='[Total_Persons_Pending_End_Year]' role='dimension' type='quantitative' />
      <column caption='Total Persons Pending Start Year' datatype='integer' name='[Total_Persons_Pending_Start_Year]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Otherwise_Closed]' derivation='Sum' name='[sum:Otherwise_Closed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rejected]' derivation='Sum' name='[sum:Rejected:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Statistics_Filter_Decisions_Recognized]' derivation='Sum' name='[sum:Statistics_Filter_Decisions_Recognized:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.494302' measure-ordering='alphabetic' measure-percentage='0.505698' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pcvjxg1uj9vcy13kjy0709hsg3x]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Statistics_Filter_Decisions_Recognized:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Rejected:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Otherwise_Closed:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='3 measured values'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Asylum Application Results </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='KD_US_AsylumSeekingApp' name='federated.1pcvjxg1uj9vcy13kjy0709hsg3x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pcvjxg1uj9vcy13kjy0709hsg3x'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Otherwise Closed' datatype='integer' name='[Otherwise_Closed]' role='measure' type='quantitative' />
            <column caption='RSD Procedure Type Level' datatype='string' name='[RSD_Procedure_Type_Level]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Rejected]' role='measure' type='quantitative' />
            <column caption='Statistics Filter Decisions Recognized' datatype='integer' name='[Statistics_Filter_Decisions_Recognized]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[RSD_Procedure_Type_Level]' derivation='None' name='[none:RSD_Procedure_Type_Level:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Otherwise_Closed]' derivation='Sum' name='[sum:Otherwise_Closed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rejected]' derivation='Sum' name='[sum:Rejected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Statistics_Filter_Decisions_Recognized]' derivation='Sum' name='[sum:Statistics_Filter_Decisions_Recognized:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Sum' name='[sum:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Otherwise_Closed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Rejected:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Statistics_Filter_Decisions_Recognized:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Country:nk]' direction='DESC' using='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Year:qk]' />
          <filter class='categorical' column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:RSD_Procedure_Type_Level:nk]'>
            <groupfilter function='member' level='[none:RSD_Procedure_Type_Level:nk]' member='&quot;G / IN&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[:Measure Names]</column>
            <column>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Country:nk]</column>
            <column>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:RSD_Procedure_Type_Level:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Year:qk]' value='77' />
            <encoding attr='space' class='0' field='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[Multiple Values]' field-type='quantitative' major-show='false' range-type='independent' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[Multiple Values]' scope='rows' value='Applications ' />
            <format attr='width' field='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[Multiple Values]' value='92' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Country:nk]' value='132' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[:Measure Names]' />
              <lod column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.263370156288147' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Country:nk] * [federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[Multiple Values])</rows>
        <cols>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{F92B233B-E656-4163-B369-A1F45591C034}' />
    </worksheet>
    <worksheet name='Accepted Asylum Applications'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>US Asylum Applications </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='KD_US_AsylumSeekingApp' name='federated.1pcvjxg1uj9vcy13kjy0709hsg3x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pcvjxg1uj9vcy13kjy0709hsg3x'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='RSD Procedure Type Level' datatype='string' name='[RSD_Procedure_Type_Level]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Rejected]' role='measure' type='quantitative' />
            <column caption='Statistics Filter Decisions Recognized' datatype='integer' name='[Statistics_Filter_Decisions_Recognized]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[RSD_Procedure_Type_Level]' derivation='None' name='[none:RSD_Procedure_Type_Level:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rejected]' derivation='Sum' name='[sum:Rejected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Statistics_Filter_Decisions_Recognized]' derivation='Sum' name='[sum:Statistics_Filter_Decisions_Recognized:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:RSD_Procedure_Type_Level:nk]'>
            <groupfilter function='member' level='[none:RSD_Procedure_Type_Level:nk]' member='&quot;G / IN&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Year:qk]' included-values='in-range'>
            <min>2000</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Year:qk]</column>
            <column>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:RSD_Procedure_Type_Level:nk]</column>
            <column>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Rejected:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2dada</color>
                <color>#f3c3c3</color>
                <color>#f5abab</color>
                <color>#f69393</color>
                <color>#f87c7c</color>
                <color>#f96363</color>
                <color>#fa4b4b</color>
                <color>#fc3232</color>
                <color>#fd1919</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Statistics_Filter_Decisions_Recognized:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Statistics_Filter_Decisions_Recognized:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Statistics_Filter_Decisions_Recognized:qk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <text column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Country:nk]' />
              <color column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Rejected:qk]' />
              <lod column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Statistics_Filter_Decisions_Recognized:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Statistics_Filter_Decisions_Recognized:qk]</rows>
        <cols>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Year:qk]</cols>
        <mark-labels>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Statistics_Filter_Decisions_Recognized:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Country:nk]</field>
                  <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Year:qk]</field>
                  <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Rejected:qk]</field>
                  <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Statistics_Filter_Decisions_Recognized:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Guatemala&quot;</value>
                <value>2016</value>
                <value>14994</value>
                <value>6264</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Statistics_Filter_Decisions_Recognized:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Country:nk]</field>
                  <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Year:qk]</field>
                  <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Rejected:qk]</field>
                  <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Statistics_Filter_Decisions_Recognized:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Guatemala&quot;</value>
                <value>2017</value>
                <value>24858</value>
                <value>8883</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{F72B9E83-28B5-4B8D-802E-8E8DC974F9E6}' />
    </worksheet>
    <worksheet name='Rejected vs. Accepted Asylum Application '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Rejected vs. Accepted Asylum Application </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='KD_US_AsylumSeekingApp' name='federated.1pcvjxg1uj9vcy13kjy0709hsg3x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pcvjxg1uj9vcy13kjy0709hsg3x'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='RSD Procedure Type Level' datatype='string' name='[RSD_Procedure_Type_Level]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Rejected]' role='measure' type='quantitative' />
            <column caption='Statistics Filter Decisions Recognized' datatype='integer' name='[Statistics_Filter_Decisions_Recognized]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[RSD_Procedure_Type_Level]' derivation='None' name='[none:RSD_Procedure_Type_Level:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rejected]' derivation='Sum' name='[sum:Rejected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Statistics_Filter_Decisions_Recognized]' derivation='Sum' name='[sum:Statistics_Filter_Decisions_Recognized:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:RSD_Procedure_Type_Level:nk]'>
            <groupfilter function='member' level='[none:RSD_Procedure_Type_Level:nk]' member='&quot;G / IN&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Year:qk]' included-values='in-range'>
            <min>2000</min>
            <max>2017</max>
          </filter>
          <filter class='quantitative' column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Statistics_Filter_Decisions_Recognized:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Year:qk]</column>
            <column>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:RSD_Procedure_Type_Level:nk]</column>
            <column>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Statistics_Filter_Decisions_Recognized:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Rejected:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Rejected:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Rejected:qk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Country:nk]' />
              <text column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Rejected:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Country:nk]' />
              <text column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Statistics_Filter_Decisions_Recognized:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Country:nk]' />
              <text column='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Rejected:qk] + [federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Statistics_Filter_Decisions_Recognized:qk])</rows>
        <cols>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{176B814A-9039-4461-8CCF-849D3B60B39C}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' maximized='true' name='Accepted Asylum Applications'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:RSD_Procedure_Type_Level:nk]' type='filter' />
            <card param='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Rejected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19pj3mk0ugjp2m19rh4rr15brwtx].[none:F1:nk]</field>
            <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Country:nk]</field>
            <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:RSD_Procedure_Type_Level:nk]</field>
            <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Statistics_Filter_Decisions_Recognized:qk]</field>
            <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Total_Persons_Pending_End_Year:qk]</field>
            <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Total_Persons_Pending_Start_Year:qk]</field>
            <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Year:qk]</field>
            <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[sum:Statistics_Filter_Decisions_Recognized:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{CE1CF5F1-A19F-4616-A04C-213D628A609A}' />
    </window>
    <window class='worksheet' name='Rejected vs. Accepted Asylum Application '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:RSD_Procedure_Type_Level:nk]' type='filter' />
            <card param='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Country:nk]</field>
            <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:RSD_Procedure_Type_Level:nk]</field>
            <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC13275B-8117-4A6E-A983-4F9B6AB2BA0D}' />
    </window>
    <window class='worksheet' name='3 measured values'>
      <cards>
        <edge name='left'>
          <strip size='235'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:RSD_Procedure_Type_Level:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[:Measure Names]</field>
            <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Country:nk]</field>
            <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:RSD_Procedure_Type_Level:nk]</field>
            <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Region:nk]</field>
            <field>[federated.1pcvjxg1uj9vcy13kjy0709hsg3x].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{78128C5D-2766-425E-BB30-5BE5DD46C7B5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='3 measured values' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dWXBc2Xnff3fpvdGNfSdAkCA5XGeGs0mahWONZkayNIqtOF6UOLFLqZSd
      lGP5IXbZfnApiauS8oNjp1KJK46z2KnESuxEFUnWOiPNJs3CGQ73AUFi3xqNRu/LXc7JQwMN
      EpgZXICNBi5xfy/kIfv0+e695+tz7ne+8z+KlFLi4bFPUXfbAA+P3cRzAI99jecAHvsazwE8
      9jWeA3jsazwH8NjX6Kt/MU0TIcRu2uLh0XBqDiCE2LcOkM/niUajW65n2zaapu2ARRsRQqAo
      CoqiNKS9Rl6blBIhxK7cy5oDBAKBhjR+NywvTJLOFXnr8jg//flP46vTBM4wDEKh0JbrWZaF
      ruubf7AO2LaNoiioamNmrY28Nikltm039F6qqlq9nw1psU7klxf4+vffZqinCWN/DlYedaYx
      LlcnOvoOcfpIjoKh4m/MTMDjHsdVDpCYnaCtf5iOeAitjmOXEALLsrZcz7bt+hnxYUiJNIus
      pmwpuh9F8+94sw25thWklEgpt/UMtsPq++4d7wBuIBKN8fYb55mKxvnUM5/EX6d3JlVVtz3/
      3Ol5q8jOUPhPz9fK/oe/RODJ39jRNlfx3gH2GIqiYAtBuWzQoGCIxz2Oq0aAcjFHJN6OWcxg
      C+oWBdrLSEujNNVVKytHouz9eJ17cI0DGPklFrIWheV5wi1dqPtkBJC2Rnl2zQH82a2vV3h8
      OK5xAD3YRE93F129A1iVsjcF8qgLrnEAVffz4+9/DTN2GMWq8Nm+AddNgUrf+h1kOQOA1j5M
      4InGvMx6VJG2gczNVzMeFAU11OIeBwD4+LlnefnHFwnEWtFcOALYkz9CFharBaOwu8bsQ0Rq
      nMKff6FWDjz+6xsdoJhbZnxqnp6uTgKxFsI+lWw2QywWb6ixH0Q+nUKNttDTEsJ24U7mwugA
      dro6h/fbPYR32Z79hl0Kkn7zTK0cH+pY7wCSm2NTHD95ksL8GO9NztLd3kFQFxQyy6TSGToO
      HCa7MAGBOMMH+xt6Ab2HjhOML3NzbrluawDbQVoGSBtpWUipo/ic5RGZ2QgiawKgFbaee+Sx
      RvnF3wfbAEDtOIb/gS9u63s2OICiqGiqhqrqHD52nNzcOMu5Mv5AiJP3DTEyuUy5ZLKcnG64
      AyzOjuHvOknb0iIVG8K7NIEr/81vYo1+r1pQdZp+/cLuGPIR2EujWKMv1sq+o8+hthzcPYPq
      zPJfv4eslAEInPHR9sD2vmddF1Lp6Yhz6fIVetqaCWgKMtpEMBhE132g6kQjAco5hfguTIna
      O3r4zkt/QzjWzvFdHAHcgFgcwXj9j2tltX34nnIAKxdBVqrd11fa/srIht/Qtu4DtHWvleNd
      XXf8f293mN7uzm03uF3K6TnevHCVXC5LRaiYNgTqNAJsNRfIKvqxciszeE3fVg6L09yX9Tk5
      QjirV1kOk708XCurT4VQtmCnm3KBxLbvpXBXFGhmZnZHvneruUDlmR5KV1c6l6bRso0cFkVR
      HLVZioT59rlP1Mr3Dw/xqIN6ivBjF9ZesxXp23KuzVY+L40C8rbIlhJuRVEdXN/Xfg1r+s1q
      nWAz0S99e0s2AqgO76VYt+FGVVX3OECwuYcvfP7TfPfF14h39+N3jeV3h6XrjA4N1sr9Lc27
      aM2HY7z9Zxhv/EmtHPmlb6C0DH5EjSqFG21UrvYCoEZjNHqd21XdaGFmnKMPfIylWxeYXy7Q
      0xLZbZO2xItPPEahWASgt6eXv7XL9tST0kwX2TdP1crBn/c7yrQUZT92sRoRk1rjs5xc5QDx
      lk6uvfsuADdHR+l55P5dtmhrTPb1kKtUAFBaWnfZmg9GFFOIhSvYQoCqonYcRY12bV5RKiBd
      tjSPyxyglE+xnCuhqSqffM5dnd8t2LPXKHz1y7Vy+IWv4D/9uV20aGdxlQOYFYNypUw5neDb
      P3idzz/zic0r7QAL7W0kB/oAUDSdgV2xYmewchGyF4/VyvoTMXZ+/9nu4SoHOHDfWZ72RRmd
      XOTpc7vT+QHePX2cy50tAGiKwrlds+TDqQT8LLauvTDHfD4v9eIDcI0DFBM3+ZP/+R2GO3UO
      P/2L+LyFsI9ksq+Hr37+M7Xy3+/uYifjR7cG+nnv8cdq5S+EQjhZKjV9OhWfDwBt5U8n/Pnf
      fgFzJfZ/tKeXX3BQZzke4z//7E/Vyp88ccw9DhBqP8jnn3+Sq5cvcvXt1xj+zDO7mg/kcSfJ
      thauHzlUK5s+Z13rm598ktH7jwMQ9vn4PYftlUJBjJWFrYrf2SRNqCrF8FoOlqnr7nEARdU4
      fOwUh4+dQkpPFGinSLY2852n1qaX57o6ObKL9uw0rnGA21EU94Xb3EIhHOLGobUFrAej7lpr
      2SrK6hlhhUKhYbose41CoUAk4vxB20IgVvQsVVXF51DT0hI2qyeyKYqC7kDmUAKWbdd0gTRN
      RXPwAyCkrMbyV9BUFdXBPtLVeqvX5rSeLQVCrG3S0FdkRzbDEqKmDapqKj7V2b00b8vrcXwv
      pcRa1QRSVfTbUyG20gF2i3x6kXyxzPlLY3z6uafquissHt96dqunDVofPF0ghyRnbvKN77xO
      W1yltD8HK48646p3gL5DJzmZUwhFogS9CJBHHXDVCDA7dpWy9KE1aKj0uPdxVU8KhpuYvvAe
      6XgrR47WbxFjT4vjrrAq5tqoQ0zctCFmq7hWHDfcFCcSDODzhdDrOHbtZXHcVRr9EgyeOO6e
      I5WY4cCxBwjKPJXG/UB53MO4xgGsUg7bF2f0wqsYvjh+11jusZdxzxRIUUBROXHmLIqi4kJd
      LI89iGt+R/VglJF3X2YmsczI9WuYXjqQRx1wjQMAHDv5IJpdoW/oiDcF8qgLG6ZAC7OTLKby
      HDw8TDT04WmmUsqGnVlbw64wvZRmSJOYgrpGglZzbRpVb7s0sr39cG0bHCBXMjl16gTSNhm5
      dhVftIVY2E/Ur7JctlhOJmnv6OD8W29x9rHH6WyNNczo9t7DfEKJcGsuXVdpdCHEtuLejY6V
      Aw09KLuRNPKQ9g88KHuVfCbJ5SsGTX6N1oHDLEyMIkoai0IhGvbROzjE7MQkBwYGG9r5AfLZ
      JdoG7kPjWl1HAG8d4INp5DpAI9v7yHWAoD8AUhKNx5i48T6ZQoXezlZyBqjC5Mb160SaW1GF
      QSKVbYjBq4SCQV7+3re4PpFw3eEYHnuTDS5336mqzK5VLhBMLNLe0Uc6m+fo4YPISpZTfW0E
      fSr0tDfU0HJ6jgvXblHIpbGkgl3ndwCP/cmHjjl6MMLJU6fv/MdIx07b86EoispicolgMIjP
      7wMXnhDjsfdwzW+ov6mDn3z+U7Q1xxgcOuyFQT3qgmtWghVVZXFmlL5jD7F06wLFo0eIOFfR
      qCt2cgRZXMYWNmg6+oFHd6wtaVWwZy+sCAEoEO9Fbb6XpLh2F9c4AEAkEuf1176PtC0yr77O
      T/5EfcSxtpoOXfjmf8W4+ipQVYZr/oozSW/r0nfArJ5qokTb0I4+vmkdO7nMwm/9Ya0c/dwL
      xH7u5xzbul28dOg9iUDVfPijLTxbR2W4rYZBjWQ7pfGqNCKaRrvDuvN/8nVEOg1A4Ph9dP2e
      A005TbtDdFZVnNlaDS3evrCkbHkNYT+kQ7vKAYr5LKGmOIXEBD965wpPPXxyt03as5TffoXl
      P/2DWrn1V3+X4AMf20WLdh9pVRCZ6eqim6qihlvd5QA9h05DaIYrwuBIgw/ocxvC0LEyTWtl
      a28+amkbSGGDEEhsFN3ZGQGl7/+r2imRWsdR/A/+/KZ1rLl5Fn73t2rl2N/5onscoJSa4i+/
      /kP00gJHn/klutt279ziNx48zc2VVXBVVfk1h/UuHT9KOZ8HoH1gAAeq+9iqeofIrRYO7ajG
      p700Q+XSSzVdIP99n0DvPrRpveKPvk35je/VyvF/8JtoLZuHzVN/9C+pXKuesqlGY3T/4V84
      sjP5395Hrpy1EDobouPBzetIqSCMtfw2abnoiKRAUzsnjwxycyTP2PVLPDj09K4J5C43x5mt
      VA8K1LYwrz5/5kTtgIyhllaedFCnGA7dIXL79NAwfVuydmsYk4sk/8M3a+XWfzxA1IEDGFNZ
      8j+eqZWbfs7CyeOxi0GsXPVgJHWH9aulolDxr4UObU1zjwOovhCPfPxJHvn4k9iWiaeO+NFM
      9Xbzzc8+Wyt/vquT4Y/4/CoVv4/5jrZaORwM7ui5XanmGNmV9vRIBKcT2/NnTmKZ1SlQz6GD
      OFmiTTXH+dMv/kyt/PyR+9zjALej6bu0AOAiysEACx1r6SpOFZTnO9v5q88+Vyv/bF8PTpJe
      zp85wQ+Ca79KX25qou0jPr/KK489xOhwVYs07PNx1pGV1fZW1aGPd3SxeUD5g/G0Qdm6Nmiq
      VKRsmggh0DSNniZnWbEL+VxNr9Ov67SHN2/TFoKFfG4lrKnQFAwQCwQ3rVcyTZZLxVq5NRwm
      6OCHo2xZpIqF2jtAcyhM2IFuf65Srk3vADqjTY70OpeKBSqWhZQSTdXobmratA7AXC5byyIN
      6j5aw5tPn0zbZrGQr+1liQWCaw7gBirFHCXDYHRsjrMPnEKtUz5QJpPxtEHXsdVrs+cvYyeu
      1sq+Y59BCTjrzN46gENmbl7m7esJWlojFKxTNHkzoT2DdeulO84J1g885tgBdhNXOUD/4RPM
      5XU621sI19HyVXnurbK6pN4IVtMFGsVWr229bUIIcFh/9doadS9X23GdMNb8xPsk0xnmEktO
      7+2O0vA90Q3krq/NJbfGVSOA7guQTiaQwqae/X+7c+vVF8VGsPri1qj2tnpt6x1GVVTH9VdH
      gEbeS1dKI7Z2H6AtFiYWb/O2RHrUBVeNALNj73PskadZfP9NihZEvZfgumPPXqD88h+AhIoC
      gcd+BX3IyZq1O3GNAwjbpK1/mFd++CLx3sN1fQn2WENWcoi599bKpeVdtGbncc1EwixmuDE6
      huILUMylsfbAS7CH+3GNAwSa2lHKSQaPnSGkmJ42qEddcI0DAFg2TI5eI9jaS8ibAnnUgQ0O
      kM+lSSQSVIwKFdMGKclllsnk1vJKEFb1/z4EwzR3xNjuzjauj95ifOSqd0CGR13Y4ACTU1OA
      glJY5MZcFmmmuTo6S6GQp5RP8/7ITaziEiOTCQrFMoVcjmw6yY2bEwghmBy7wcWrI+TSScam
      5rDKRRKLi5SMu0+0a2rt5qlHH8AXbqpbHpDH/mbDRMIoF0ksJol2r2SB+5ppCU6SSC7jEyFy
      y7OMiw6UQJzJqSkUaRML+0lMT2KX8jT1DxGzphifStDV7GfsZopSuJWOjrufs0gpOHTiLB1t
      425ZaPTYBJGZQRoFpBDYuh+tbfPNN/VkQ69UFRWkREhQVQWsEiVbpWSUSC2X8QUCSCFQNT9+
      O4OIDpJaniDg86MFfMyO3UTTVAKywvRCka7WFpq7O+vSYYVZ4uXvfxeE4IWDR+vwjWtsJ8+m
      0fk5W2nPuvkSlZd+v1YOPPvP0Qc3V9KQ687ekWzvGp3WK3/v97Anf1wtBJuJ/sorW25rq9x+
      Hzc4wJkHH6n9/cTKn/efOb3+YyusbHkY2HnJxEo2weh0CquUIxhrret3b1cefTWNtxGsPjCn
      nVEYRWR+4bZyyZGtcl2SlRTOrlGIjclw0kl7666nEffz9qQ798RSFIV0Oks4EsHncHeTU7Yr
      j76X9wPIdZ9TNWfXaKl37uR1em/sdS9lmqqhOqhn3JZDpNAYLSJXHpOqB2Pcf+YUkaCPzp5e
      Txnaoy64phtpvgBmdo5wxxCLEyOUvTDovkbkE4j8AiK/gCylt/097pkCAf5AmBvvvoNVLvLS
      y6/z2U/WTx5xr1IVx313ba4c7/PEcYHCf/ksmCUAtKFzhH/q323re1zlAOGmGEG/n2h3P8/V
      SRi3kZS+9TvISvVUHa1tmMATX960jiwmKf3VP6yV/Q9/icCTv7FjNu43XOUA6aUEB4aPk5m6
      xsjEHMcP9uy2SVvCnvwRsrBYLVTyu2uMB+AyB2jvOUhydIyy0DDL5V2zw7r5EiI9Wd03q+n4
      z/7irtni4RyRmab8va9QFZgB38mfdo8DGLlFvvvSK6Tnb9H94Oc4eWxo12wxr34Na3RFB1P1
      HGA3MJdjSKO6I8rf4UxSURpF7Mkf1cragUfc4wCKphMJhyn6/RiVEjU39nA1ohzAKlSFvhSx
      ueDXKoXRgZo4rmjqZLsCLK5xAF+4hWef/zRCPEt6+d7epeRGpFAR1toimtPkieJYH+XL1bQW
      tSm6s8rXpQDp88dr5fjhdvc4wCqqqtHa1tgjWtdTmuqmdLkqNavouuNfn/JcOyJbXXrx+Vsc
      aSFLoWLl1j6pG842QtulIKXpNQF2f8mZ7r5d9t9Rz1cM4qTF8mwn2fNrB5aE/57fkTr0neK4
      UcfiuAvtbQijOgI0x2OOxHEtTWeupbtW1oJRTxsUtq4NKisVpG3XpENUB7qUAKJUgpV4vqKq
      KEEHQ76UiFKptg6g+v0oDrQ6pWUhDaNWVgIBFG3zLiltG1mp1K5N8ftRnBzJZJrI2/aBqMEg
      OEjbMGwbWwikFKiqRtBhKkTZslgdZ1RFxe/g2oSUGLaFEFWJGZ+muUsbtJBJki+VuXBlgk99
      8nE0Txu07ojUGOaV/4OQElVR0I9+Gq3rxOYV7wJPG9QhielRfnB+kmPDPZQ8WZQdQWSmMd7+
      s1pZbRvecQfYTVzlAP2HT3IirxGJRgnu0ukwHvcWrnKAmZtXyBsqAeGaWdu+ofL6v71DHTry
      S99AbRncRYuc4ZpsUIBQuIm5yZuMT05hez7gUQdc5QCReCvRcIBAIOztB/CoC67qRkvzkwye
      eJigyHmyKB51wTUOYJXzEGpj5PwPMfwt+F1jucdexj0vwVJimBZH7juFounUc/VCCLGtRcBG
      bYiHqo2Kouz4KSrrr8kWNoqDe7N+U7xl26gO7+mqSkOjFmJXT79x1TqAHmpi/Mob0HaMwtI4
      x06edrRE74TtboqHxmzihgYekrduRVVTtW1titc1Z5viYXcXwlw1kTh45ASinKdncNibAnnU
      hQ3dSFgGoyPvky3c3YaTQj7vOCPQKToWU4klcslZTx3aoy6sG3MkVy5fZvj4KWzTYmkpRQBQ
      o0Embo7T0dXF22+9ydlHP04hlSDU3AnlDKlcGZ8q6OwfYnl+Ai3cSnFpkYFD/YyNT3Fg6ChN
      obufsLT1HOITMsStubQXBvWoCxscQNWDFNMLTC6U8GsWcQlafzuGYTA+s0j/wCARK8P1ZJZw
      3iQW1NAtk56hXuZSGSr5IouzS/S2NFMq5DGtMjdvTvHAqbvXfCzml+k4eAK//j62wDsn7B6g
      9K3fxp59FyQowRiRv/vVhravri/GIzoziWXC4RBYZSYTS5ilEoqmEwj4UK0yOVsnpKu0t7cR
      CkcIhiP4fT58uqBSEYSCQQLBAMViCV33E/DXJ3En4Pfz8ve+zdVbc2he578nkIVFZGYamZ1G
      Zmcb3v6G1+7+oaO3bUo4UPvbwDoBhu6evg1fdrAnxsGeOz/odIPDZpTTc7x3fYx8NkWgqbV6
      TrDnBB53iWvCoIqqkUqliUaj+EJB7uEzqj0aiGscwB9t49lnzvHGG2/R2n+wrvN/byFsjUYv
      hN2+H0uC4+dgvvgVsKs73tSO+9AecK7M4cqFMEXVWJq9Re/RsyyNvUfx6BEidVoJuxcXwqzx
      16i89ke1cuDcP0Pvf+QjaqzQ4IWw7apDl0a+tSaNWMkTePiXHdUDF+8IC0divP76SwjLJPfq
      6/ykC+URG4UsZxCJq2vlSm4Xrdm7uMoBVFVB1XyEm1p57pzX+T3uHlfFUQq5DE3NbVTSM7zx
      3vXdNsfDZUjbqEpaZqYQ6SlkOeuuEaBn6CSEZrlUyTHY27nb5jQEaZaxp95ASIkCyJYBtNbG
      HiS3J5HclhHsLCQoUuMU/+ILtbL/8X/qHgcoL0/z1W+8jMxOc+xTv0xfZ33PCdsKIjeHNAoI
      28bWdLS2w47qGRe/Cmb1vGUl2o3v2Kc3rSNLS5S+9k9qZf/DX0Lz5NFJv32qJo0YsgYdiYx9
      EK5xAF+klaNDfYyPZhgfucpDh8/h2yVliMoP/vUd4rhNv37BUT3jx/++Jo+u9T3syAHudQqj
      A5SvVE940aIxojvcnrRvGy2ki6JAmj/Mxx4/x8ceP4dlmU5Exzy2gbRVrEKoVr5d7/OjEIbv
      jnpSOpuWSFNHGtVDD4W5s93RLgVJv7124mn8cId7HOB2dH13FbHSkwfJX34A2Jo2aHG8F5Gt
      yiH6lU5n2qC2ipFck4xVi0GcqHyay3HS59cErdqfanK0gcgoNLE4sqbx2Z1tdtReYamT1G31
      IoYzbVDDp1NeOfVT28LpnxW/H7HyEqA5kIoEkIpSawsgqmueNihsXRs0WSxQMk2EEGiqSn/c
      maaxMT4OVnWlVQkF8fVtzKdajzQtzImJ6kuwAlpLC3pb26b1RD6PNb92TrDe043q4BrLpsli
      sVDTBm0NhYk46JiZcplsZW0PSU9TDN3BML1YyFM2TYSU6JpGX8yZROV0Jl3bbxLSddojm0+e
      TNtmPp+rnoWsKDSHQu7SBjVKeUqGydjEPPefPl63fCBPG3Qjjbw2TxvUIdOjl3hnJEE0FuLw
      8eM01Wkm5OUCbaSR1+ZtindI/6HjzOV1ujpaCdfR8nsxF6ge7IcRwFWxlPnJERJLKabmFmjQ
      D6HHPY6rRgBd95NJJVEU8Pq/Rz1w1QjQ1jtIR3OEeHO7J4viURdc1Y1mbl3n2CM/QdBMUdif
      EVuPOuOaKZC0LToHjvLKKz8g1n2ori/BXhRoI14UaI9hFJa5fO0GFUuSXkpgCaiT2IQXBfoQ
      vCjQHiIQ6yAkCxx/4DFaQqqnDOdRF1zjAAD5QomRKxdQox2EXDN2eexlNjiAYZqAxDTMD/h4
      Fcuy2I0MigN9PYyOTzA5et07IMOjLmxwgJEbNwDBjRs3KWSWGJ+ex6iUmZ4YI50vU8gs8eM3
      3yafy1GxBPl8nmIhR2IxyezkGImlDPl0kluTs3XV8AeINHfw+EP3o4ciqJ4ukEcd2DCRKGVT
      XL58lXxJcGtyhq6oxvsTeVpirSzMTGKZFgd6O8kmZ9Dah0lOT1LJLXPiwYcZn59ldmyW3rYI
      gaZ2JBLF4XY1RygKw6ceojsxWc9v9djHbHCAcLyNk8ePcu3qKLaRYzJh0tLbTzQaxijolHJp
      prJZjg50cGvkKoqq0NHRTUBUSBXK+DSNeDzOjYlJ+vt68ev166p2Jc8rb3wPbIvPDQ7X7Xu9
      MOhG9ksY1DXp0JXsIheu3mByappgUxvPP/tM3cKgXjr0RvZLOrR7okAKLC9nCAZD+HTvmHiP
      +uAaB9CDTZw8eZxoKEBnd48nj+5RF1zTjTRfEJFfwNfcx8LEiBcG9agLrnEAAH8gxNj7F5mb
      m+fFl1/fbXM87gFctZ4aiTUTCvjp6DnBs3UUxpVSbiu6st1622E1VtHI9hrVVqPbW23LVclw
      AMvJBQaPnSY9cYWb0wscPdBVt+/eTjBsNXzXKBrdVqMDhI1qT0qJoihIKd3lAG3dgyyM3KRo
      KRRyOaA+DqAoCpq29ciSlHJb9bZDo8Ogjby2VWdrVHuA+8KgRj7Jiy+/zrV3XkPvGObMffVb
      CPPYv7hmBFAUFb/fj8/vp+5JRltEZFfFcS1sXUdr85zRrbhmJXgVYVskk0u0dnTV7bDsra4E
      l/7fl7cljns33KsrwdbMeWRhCSEFmi+IfuhpR/XKL/7+bWeEHcP/wBcdt+laYSwAVdPp7Krf
      y+92KE11Ub66IomuOdcGLb32v5GV6rlWanMXwbPPbVpH5JfIf/V3amX/mecJPvyFj6hRxbz1
      FqUf/GmtHHrmV/ENPrB5e+lJzPe/hRACW1XRDz+N1n7UgZ2JmvI1gNo2jKJvriqa//r/wLjx
      TrVOJEb7V57etA5A+a1vI1fOCPMdyTlyADs1TeH//guqx/EpBB76qTUHcIM2aCGTolSuMJPM
      cerEUbQ65dkVCoUtfd588Cdg4DRSSBRNI5PJOKpXLMSQRlUcV/OFqDioJ8sWxc4XarM+v37A
      UT1LtFDpfGHNZjuG7qCenbGoLHchpahOO9MS3bd5PXNqFnN6olYOPtiGGgx9RI0qU+e+ROHR
      X6hGZDQdn9N7efq3QVRXQ43WNmwH9URZpdT5QjUKhIKhHXDXFGji2ht849VRHjo9yKmHnqjb
      KZF7ORlOWgYicaV2DKkW60aN9e5om7B/kuFcNQXqHjjG/Scs0EJ1ywTd68jiIsW/XDsD1//w
      lwh4J8TUDVc5wMLUKMF4Fx3xUF3jt3t5P4C07mxDyO3ZulX2y34AVzlAKNzE+6+9zVSsha7e
      PkcHMDihUbIo5pWvIa3qi5sS6cA3/MymdcS61G9V2b6tW8WbAu0xfMEgAb8PBb1uL8CNpPLa
      v7nzjDAHDiCFipleizNpZSfntXg4xVUOkE8nae87THFpGlNQt3WAvYw0dfLvD9XK6rGWbZ+I
      6LER13Qhs7BMxtCZu3UZ4W+ijluNPfYxrhkBVF+IeDzOo594EmFbTs9G9vD4SFzjAJo/yLuv
      fgs7PoxZzNI7eBhfncavRkWBiuM9iGx1Du+jHb+DNte3IURjoiVeFGgPcvbRJzh/ZYy2rh58
      dRwBGhUFMlLNiOqZ0CgdMWd116UIq6riRYHuEneqQgCVYo6CUAkpJpZr1q899jKucoDuwWN8
      7NQwRRnwTojxqAsbutGbr36fxWyZidFLvHPxBuVinkKpgmEY2JZJIbNEwRDksmkM0yaXSVMx
      GzNfTCWmCXcM0RvTMTx5dI86sGHS1drdx/LCLIpUCVLm1VdeoWz7uP/kQZJZk+6ITUEpY9gG
      LVqSlK1hlea4//TxHTc23tzCd1/8G4KROEfP7HhzHvuAjW8dig9RTBHq6MUsLS95R4MAAAcx
      SURBVNHc0UNfby/CzCNtCylBUav7aFcqNMTQcnqO85dGKOSzmFLFskGr0zvTdhUJVqMJ22vT
      mcLD+s80Sj3hbq5tq6xGgRrV3mo7HxgFGhwYANmPovsQbR3YVgXDVggFmunqroqzaj4/xVyG
      QLiJSDFLINzfEMNnZmYb0o5T1n4EdrSVbdWyF65gXv7rWtl35mfROo45b7Uh17b7bHAAn++2
      JHu/Cn4fH7StoSneXP1IvGWnbLuDYHMPP/PTn+OHr/yY5p6D+OsYMdvqVkORnUFW8kjbRmo6
      WsfmO6Y2tomjNtV1ByE4tdXOTGFf/l+1su/Qk6hdzqepQoiGKlBIKRvaniuT4eYmRxk88TBL
      ty6QLg7TEq7TjpgtUvnhHzR8T/BWEYYPY2ltk0/A2J17tddxlQM0xVp5541XkFJSeucCzzzx
      yG6btGexchEKo4O1cqgQwr+L9uxVXOUAplGkYkl0X4AnP7F7nd/MRjAWq1NARfN+Wd2Mqxyg
      XCxgS4X8/Bjff/UtPvPU7jhBZaGd0q2BakHTaNsVK/Y39uy7yNVoTijuSJtJFJKYF/47QkgU
      BfTBx93lAAeOnuVcuI3rN5v52CObS3w4ZavJcFLcmYexnSQup8lf202GWx9SFLaza5RWBVla
      RggboWoowTiKb3N1h7thO8lwpb/6R7Cyu049+BSBF/540zoit4jx5n9ca1cPukcVQgqLKxfe
      YW5xifvOPkF/exP1itRls9ktCbNaS0vIUgkhqtEEX3+fo3rm3BysdGglEEDv6Ni0jrQsrPn5
      mn1aLIbmQMFCFIvYqVStrLW1oYY278jSKCJzsyvXpqBEu1ACTpWPts9Wo04idQvkipP7I6hN
      PZvWkZaBzExW76WioIbb3OMAexHbthsm6Lr6i96oUGEjr211EayR91JRFHcdkufhsRN4OZUO
      McpFFhJJpITlpUXKhoVllFlcWgYgs5ykWDE31Cvk0iwtZ5HCZjGRwBaSUiFLOltVoysUCh84
      /SrlsyRTaaQULCYSWEJSKeZJZXJIKUgm5imW17cnyaSSZPJFhGWQWFxCSkkukyJfqmCWi8zN
      zWPZ69MrBIsL85QqFkapQCqdQ0rJUjKBsSLLks1kWG+lsAzm5xewhCSfWSZXLCOFRSKxiJCS
      5WSC2YVF1lMp5VlYsS2VTFAxbcxKiWSqulkil0mRyW1U61t9BuIDnoFllJidmal+r4NnUC7k
      SGcL3gjglMT8LJVillIZLH8Iq1zEj0k4pGMqEcqmhW2UOX365B3JCzPTkyTnk8RaI6j+MKWy
      hZHPoigKg0MHeOOdy3zq3BMbUg9mZ6ZIJZJE4hHwRyjmi4hKEZ+m0t7Ti2nZJBYWuf/MyVod
      2ygzn0yxuLBIMKARjQQo2UHKpQLCMjl4sJ9KMUMyr3PiyFr6Sim3TKZospBIoAqbgE8lFAxS
      VEMYxSKHe1t4+Y0rPPP809we9E0tLmDZZRZTJrZtIG2bSEgjGAlTsgLklqYZGDpCe2vzHdc2
      PzdDMZtGomL6mzCLBTRRIRTQ0EMxlrIlDvR20dZy57tOYn6WSilLsQT27c8grCPDvcT8NjfH
      p3no7P0f8gyiqP4QxZKFWciium1DzG4SCQVIlyRhv4++gT6CPg3FF6RvsJ/U7AKd3T1E/D7W
      J4b7NQi0tCFNhb6+XlQ7RzDUSlc0ggg10dfV+oHtBXUVLdoMJvT29eFTygSCzXS1NCP0APlU
      gu7+A3fU0fwBZCVPc2c3quanf6CfYipBc0sXzcEA/pCfyal5Ik136koEw01klxL0HuglEIzT
      1dbKwmKeA4P9BBSb9y5fJ+SDXL50R72mpggLiSw9PU3Em7toCQUoodPX14uslGlvbeHm9RGM
      9fcy6KMofOhC48DBfgK6RPeH6e3tZn5sEhvB2NjEBhX8SChAuiiJBHz0Hlh7Bv0DBzDzRVS7
      SPeBoQ3ZU2vPAHr7etFE9Rl0NkU8B3CG5NKlSyAFkZYoIxcvYkgNHybvXbjO4PFhJm5co2Cz
      TqzL5NLF69iVCtFYgIsX3sMX6cIoLjC+nEPJp5memmZ8en5dexYXL13DrlRoag5x+cK7KIFW
      rMoSo3OLGMlJ5rMG5dKdHbKcSTAyuYhRLhPQBe++c5mOwSEWZ0dZqlhkk0sEQyEqxTvrzY+/
      z2LBpFS0sI1lbkwtcPhwN1feeRfbF+b+Bx+ktbWFYODORb9rly8hFAVb+Egt3GKxbNIeUrlw
      4RKh5iiFXAmpaes6meDixStgW8Q6mrhy/l0sNYgqSly+fotDp+7DKhTQ/evXrSWXV59Bc5Qb
      l6rPwI/JhQvXaOnuYD5VpK89tq6eyaVL17HL1Wdw6cJF9NVnkMp5UyCP/Y03AnjsazwH8NjX
      eA7gsa/xHMBjX+M5gMe+xnMAj32N5wAe+xrPATz2NZ4DeOxrPAfw2Nd4DuCxr/EcwGNf4zmA
      x77m/wNZZ7c21qp8SQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Accepted Asylum Applications' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rejected vs. Accepted Asylum Application ' width='192'>
      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
      DrRAB/i1xv8PF//WOMA4fGkAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
